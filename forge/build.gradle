buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.1-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.7.2"
group= "com.github.ttran17" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "vbox-opengl-cursor"

minecraft {
    version = "1.7.2-10.12.0.1019"
    assetDir = "eclipse/assets"
}
jar {
    manifest {
        attributes("FMLCorePlugin": "com.github.ttran17.vboxmods.asm.VirtualBoxOpenGLCursorPlugin")
    }
}
processResources
{
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

import net.minecraftforge.gradle.user.UserConstants 

ext.forgePlugin = getProject().getPlugins().getPlugin('forge')
ext.forgeSrcPath = forgePlugin.delayedFile(UserConstants.FORGE_CACHE + UserConstants.FORGE_JAVADOCED).toString();
ext.forgeJarPrefix = UserConstants.FORGE_RECOMP.substring(1,UserConstants.FORGE_RECOMP.length()-4).replace("{API_VERSION}", project.minecraft.apiVersion)

eclipse.classpath.file {
    whenMerged {  classpath -> 
        classpath.entries.removeAll { it.path.contains(forgeJarPrefix) }
    }
}

// For the folks using IntelliJ ...
idea.module.iml {
    whenMerged { module ->
        module.dependencies.removeAll { it.getLibraryFile().getName().contains(forgeJarPrefix) }
    }
}

task unzipForgeSrc(type: Copy) {
    from(zipTree(forgeSrcPath))
    into('src/main/java')
    include('net/**')
    include('cpw/**')
    include('ibxm/**')
    include('paulscode/**')
}
// Uncomment the line below to force an update
unzipForgeSrc.outputs.upToDateWhen{ false }

task unzipForgeRsrc(type: Copy) {
    from(zipTree(forgeSrcPath))
    into('src/main/resources')
    exclude('net/**')
    exclude('cpw/**')
    exclude('ibxm/**')
    exclude('paulscode/**')
    exclude('*_at.cfg') // Otherwise later re-builds will look in dirtyArtifacts ...
}
// Uncomment the line below to force an update
unzipForgeRsrc.outputs.upToDateWhen{ false }

task setupEditableSource {
  
}
setupEditableSource.dependsOn unzipForgeSrc, unzipForgeRsrc

